# This file is used by tools/generatestub.py and tools/generateapiplumbing.py

# Symbols in this file will NOT have any of the following generated:
# * jumptable redirections to managed code
# * virtual methods on PythonApi
# * GetFuncPtr entries/calls

# RegisterData calls to these symbols can still be generated, if necessary;
# just add lines to _mgd_api_data.

#==============================================================================
# These are here because, when we happen to see an object of one of
# these types, we can just interpret it as we would any other: there's
# no obvious ipy type to map to (buffer exists but isn't good for much yet).

PyBuffer_Type
PyCell_Type 
PyCFunction_Type
PyCObject_Type
PyCode_Type
PyFrame_Type
PyTraceBack_Type
PySeqIter_Type
PyCallIter_Type

#==============================================================================
# These are static data and aren't bothering anybody, so there is no
# need to register them with the managed side.

_Py_SwappedOp
_PyLong_DigitValue

#==============================================================================
# All the rest are functions implemented somewhere amongst the C code
# (could we/should be be generating them..?)

# Objects/abstract.c
PyObject_Cmp
PyObject_Type
PyObject_AsCharBuffer
PyObject_CheckReadBuffer
PyObject_AsReadBuffer
PyObject_AsWriteBuffer
PyNumber_AsSsize_t
PyMapping_HasKey
PyMapping_HasKeyString
PyMapping_Size
PyObject_CallObject
PyObject_CallFunction
_PyObject_CallFunction_SizeT
PyObject_CallFunctionObjArgs
PyObject_CallMethod
_PyObject_CallMethod_SizeT
PyObject_CallMethodObjArgs
PyBuffer_FillContiguousStrides
PyBuffer_FillInfo
PyBuffer_Release
PySequence_Fast
PySequence_List

# Objects/bufferobject.c
PyBuffer_FromObject
PyBuffer_FromReadWriteObject
PyBuffer_FromMemory
PyBuffer_FromReadWriteMemory
PyBuffer_New

# Objects/cellobject.c
PyCell_New
PyCell_Get
PyCell_Set

# Objects/cobject.c
PyCObject_FromVoidPtr
PyCObject_FromVoidPtrAndDesc
PyCObject_AsVoidPtr
PyCObject_GetDesc
PyCObject_Import
PyCObject_SetVoidPtr
PyCFunction_ClearFreeList

# Objects/codeobject.c
PyCode_Addr2Line
PyCode_CheckLineNumber
PyCode_New

# Objects/fileobject.c
PyFile_FromString
PyFile_SetBufSize
PyFile_SetEncoding
PyFile_SetEncodingAndErrors
PyFile_FromFile
PyFile_AsFile
PyFile_Name
PyFile_GetLine
PyFile_WriteObject
PyFile_SoftSpace
PyFile_WriteString
PyObject_AsFileDescriptor
PyFile_IncUseCount
PyFile_DecUseCount

# Objects/frameobject.c
_PyFrame_Init
PyFrame_New

# Objects/iterobject.c
PySeqIter_New
PyCallIter_New

# Objects/listobject.c
PyList_Size

# Objects/longobject.c
PyLong_FromVoidPtr
PyLong_AsVoidPtr

# Objects/methodobject.c
PyCFunction_Call
PyCFunction_GetFlags
PyCFunction_GetSelf
PyCFunction_GetFunction
PyCFunction_NewEx
Py_FindMethodInChain
Py_FindMethod
PyCFunction_Fini
PyCFunction_New

# Objects/object.c
_Py_HashPointer
_PyObject_GetDictPtr

# Objects/stringobject.c
PyString_FromFormat
PyString_FromFormatV
_PyString_Eq
PyString_Format
_PyString_FormatLong

# Objects/structseq.c
PyStructSequence_New
PyStructSequence_InitType

# Objects/tupleobject.c
PyTuple_GetItem
PyTuple_SetItem
PyTuple_Pack

# Objects/typeobject.c
PyType_Modified

# Objects/unicodeobject.c, sorry about the mangling, not sure how to deal with that
PyUnicodeUCS2_GetDefaultEncoding
PyUnicodeUCS2_SetDefaultEncoding

# Parser/intrcheck.c
PyErr_SetInterrupt
PyErr_CheckSignals
PyOS_InitInterrupts
PyOS_FiniInterrupts
PyOS_InterruptOccurred
PyOS_AfterFork

# Python/ceval.c
PyEval_CallObject
PyEval_CallObjectWithKeywords
PyEval_GetRestricted

# Python/errors.c
_PyErr_BadInternalCall
PyErr_BadArgument
PyErr_BadInternalCall
PyErr_Clear
PyErr_ExceptionMatches
PyErr_Fetch
PyErr_Format
PyErr_GivenExceptionMatches
PyErr_NewException
PyErr_NoMemory
PyErr_NormalizeException
PyErr_Occurred
PyErr_ProgramText
PyErr_Restore
PyErr_SetExcFromWindowsErr
PyErr_SetExcFromWindowsErrWithFilename
PyErr_SetExcFromWindowsErrWithFilenameObject
PyErr_SetExcFromWindowsErrWithUnicodeFilename
PyErr_SetFromErrno
PyErr_SetFromErrnoWithFilename
PyErr_SetFromErrnoWithFilenameObject
PyErr_SetFromErrnoWithUnicodeFilename
PyErr_SetFromWindowsErr
PyErr_SetFromWindowsErrWithFilename
PyErr_SetFromWindowsErrWithUnicodeFilename
PyErr_SetNone
PyErr_SetObject
PyErr_SetString
PyErr_SyntaxLocation
PyErr_WriteUnraisable

# Python/getargs.c
PyArg_Parse
_PyArg_Parse_SizeT
PyArg_ParseTuple
_PyArg_ParseTuple_SizeT
PyArg_VaParse
_PyArg_VaParse_SizeT
PyArg_ParseTupleAndKeywords
_PyArg_ParseTupleAndKeywords_SizeT
PyArg_VaParseTupleAndKeywords
_PyArg_VaParseTupleAndKeywords_SizeT
PyArg_UnpackTuple
_PyArg_NoKeywords

# Python/moduspport.c
_Py_VaBuildValue_SizeT
Py_VaBuildValue
_Py_BuildValue_SizeT
Py_BuildValue
PyEval_CallFunction
PyEval_CallMethod

# Python/mysnprintf.c
PyOS_snprintf
PyOS_vsnprintf

# Python/mystrtoul.c
PyOS_strtoul
PyOS_strtol

# Python/pystrtod.c
PyOS_ascii_strtod
PyOS_ascii_formatd
PyOS_ascii_atof

# Python/pystate.c
PyThreadState_Get
PyThreadState_GetDict
PyThreadState_Swap

# Python/traceback.c
PyTraceBack_Here

##################################################
# in ironclad-hacks.c for various reasons, alluded to therein

_PyObject_GC_Malloc
_PyObject_GC_New
_PyObject_GC_NewVar
PyObject_GC_Del
PyObject_GC_Track
PyObject_GC_UnTrack

Py_Initialize
Py_InitializeEx
Py_IsInitialized
Py_Finalize


